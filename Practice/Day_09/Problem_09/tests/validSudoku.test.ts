import { describe, it, expect } from 'vitest'
import { isValidSudoku } from '../src/validSudoku'

describe('isValidSudoku', () => {
  it.each([
    {
      board: [
        ['1', '2', '.', '.', '3', '.', '.', '.', '.'],
        ['4', '.', '.', '5', '.', '.', '.', '.', '.'],
        ['.', '9', '8', '.', '.', '.', '.', '.', '3'],
        ['5', '.', '.', '.', '6', '.', '.', '.', '4'],
        ['.', '.', '.', '8', '.', '3', '.', '.', '5'],
        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
        ['.', '.', '.', '.', '.', '.', '2', '.', '.'],
        ['.', '.', '.', '4', '1', '9', '.', '.', '8'],
        ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
      ],
      expected: true,
      description: 'a valid Sudoku board',
    },
    {
      board: [
        ['1', '2', '.', '.', '3', '.', '.', '.', '.'],
        ['4', '.', '.', '5', '.', '.', '.', '.', '.'],
        ['.', '9', '8', '.', '.', '.', '.', '.', '3'],
        ['5', '.', '.', '.', '6', '.', '.', '.', '4'],
        ['.', '.', '.', '8', '8', '3', '.', '.', '5'], // Duplicate "8"
        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
        ['.', '.', '.', '.', '.', '.', '2', '.', '.'],
        ['.', '.', '.', '4', '1', '9', '.', '.', '8'],
        ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
      ],
      expected: false,
      description: 'a board with duplicate in a row',
    },
    {
      board: [
        ['1', '2', '.', '.', '3', '.', '.', '.', '.'],
        ['4', '.', '.', '5', '.', '.', '.', '.', '.'],
        ['.', '9', '8', '.', '.', '.', '.', '.', '3'],
        ['5', '.', '.', '.', '6', '.', '.', '.', '4'],
        ['.', '.', '.', '8', '.', '3', '.', '.', '5'],
        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
        ['.', '.', '.', '.', '.', '.', '2', '.', '.'],
        ['.', '.', '.', '4', '1', '9', '.', '.', '8'],
        ['.', '2', '.', '.', '8', '.', '.', '7', '9'], // Duplicate "2" in column 1
      ],
      expected: false,
      description: 'a board with duplicate in a column',
    },
    {
      board: [
        ['1', '2', '.', '.', '3', '.', '.', '.', '.'],
        ['4', '.', '.', '5', '.', '.', '.', '.', '.'],
        ['.', '9', '1', '.', '.', '.', '.', '.', '3'], // Duplicate "1" in top-left 3x3 box
        ['5', '.', '.', '.', '6', '.', '.', '.', '4'],
        ['.', '.', '.', '8', '.', '3', '.', '.', '5'],
        ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
        ['.', '.', '.', '.', '.', '.', '2', '.', '.'],
        ['.', '.', '.', '4', '1', '9', '.', '.', '8'],
        ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
      ],
      expected: false,
      description: 'a board with duplicate in a 3x3 sub-box',
    },
  ])('should return $expected for $description', ({ board, expected }) => {
    expect(isValidSudoku(board)).toBe(expected)
  })
})
